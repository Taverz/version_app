#!/bin/bash

# –î–∞–π—Ç–µ –ø—Ä–∞–≤–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ:
# chmod +x deploy_builds.sh
# –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç:
# ./deploy_builds.sh
# ./deploy_builds.sh -p 123 -v 1.2.3 -s http://your-server
# sh deploy_builds.sh -p 123 -v 1.2.3 -s http://127.0.0.1:8923

LOG_FILE="deploy_$(date +%Y-%m-%d_%H-%M-%S).log"
exec &> >(tee -a "$LOG_FILE")
echo "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª: $LOG_FILE –∏ –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å"

while getopts ":p:v:s:" opt; do
  case $opt in
    p) PROJECT_ID="$OPTARG" ;;
    v) VERSION_NAME="$OPTARG" ;;
    s) SERVER_URL="$OPTARG" ;;
    \?) echo "–ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: -$OPTARG" >&2; exit 1 ;;
  esac
done

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER_URL="http://127.0.0.1:8923"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL —Å–µ—Ä–≤–µ—Ä–∞
PROJECT_ID="1"         # ID –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
VERSION_NAME="1.0.2"                 # –í–µ—Ä—Å–∏—è —Å–±–æ—Ä–∫–∏
BUILD_DIR="../build"                    # –ü–∞–ø–∫–∞ —Å –±–∏–ª–¥–∞–º–∏

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
upload_build() {
  local file_path=$1
  local platform=$2
  
  if [ ! -f "$file_path" ]; then
    echo "‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $file_path"
    return 1
  fi

  echo "üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º $platform —Å–±–æ—Ä–∫—É: $file_path"

  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º MIME-—Ç–∏–ø
  if [[ "$file_path" == *.apk ]]; then
    mime_type="application/vnd.android.package-archive"
  elif [[ "$file_path" == *.zip ]]; then
    mime_type="application/zip"
  else
    mime_type="application/octet-stream"
  fi

  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ —Å –ø–æ–º–æ—â—å—é curl
  response=$(curl -s -X POST \
    -H "Content-Type: multipart/form-data" \
    -F "projectId=$PROJECT_ID" \
    -F "versionName=$VERSION_NAME-$platform" \
    -F "platforms=$platform" \
    -F "file=@$file_path;type=$mime_type" \
    "$SERVER_URL/versions")

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è id –≤ –æ—Ç–≤–µ—Ç–µ –≤–º–µ—Å—Ç–æ status
  if echo "$response" | grep -q '"id":'; then
    download_url=$(echo "$response" | grep -o '"downloadURL":"[^"]*"' | cut -d'"' -f4)
    echo "‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!"
    echo "üîó URL: $download_url"
  else
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: $response"
  fi
}

# –ü–æ–∏—Å–∫ Android —Å–±–æ—Ä–∫–∏
find_android_build() {
  local apk_file=$(find "$BUILD_DIR/app/outputs/flutter-apk" -name "*.apk" -print -quit)
  if [ -n "$apk_file" ]; then
    upload_build "$apk_file" "android"
  else
    echo "‚ö†Ô∏è Android —Å–±–æ—Ä–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
  fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ Web —Å–±–æ—Ä–∫–∏
prepare_web_build() {
  local web_dir="$BUILD_DIR/web"
  local zip_file="$BUILD_DIR/web_$VERSION_NAME.zip"
  
  if [ ! -d "$web_dir" ]; then
    echo "‚ö†Ô∏è Web —Å–±–æ—Ä–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    return
  fi

  echo "üì¶ –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º web —Å–±–æ—Ä–∫—É..."
  if command -v zip &> /dev/null; then
    (cd "$web_dir" && zip -r "../web_$VERSION_NAME.zip" .)
    upload_build "$zip_file" "web"
    rm "$zip_file"
  else
    echo "‚ùå –ö–æ–º–∞–Ω–¥–∞ 'zip' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –Ω–µ –º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤"
  fi
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç
echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å–±–æ—Ä–æ–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
echo "üîç –ò—â–µ–º —Å–±–æ—Ä–∫–∏ –≤ –ø–∞–ø–∫–µ $BUILD_DIR"

find_android_build
prepare_web_build

echo "‚úÖ –ì–æ—Ç–æ–≤–æ!"